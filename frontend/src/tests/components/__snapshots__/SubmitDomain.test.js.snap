// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SubmitDomain renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubmitDomain
    classes={
        Object {
            "root": "blahStyle",
          }
    }
    submitDomain={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          gutterBottom={true}
          variant="headline"
>
          Submit a Domain
</WithStyles(Typography)>,
        <WithStyles(Typography)
          gutterBottom={true}
          variant="body2"
>
          Domain Name ex: "npr.org"
</WithStyles(Typography)>,
        <WithStyles(Typography)
          color="error"
          id="errors"
          variant="body2"
/>,
        <form
          action=""
>
          <div
                    className="field"
          >
                    <TextField
                              error={null}
                              id="name"
                              label="Domain Name"
                              onChange={[Function]}
                              required={false}
                              select={false}
                              type="name"
                              value=""
                    />
          </div>
          <div
                    className="field"
          >
                    <TextField
                              className={undefined}
                              id="description"
                              label="Description of domain"
                              margin="normal"
                              multiline={true}
                              name="description"
                              onChange={[Function]}
                              placeholder="Description of domain"
                              required={false}
                              select={false}
                              value=""
                    />
          </div>
          <WithStyles(Button)
                    className="btn btn-primary btn-submit"
                    color="primary"
                    onClick={[Function]}
                    type="submit"
                    variant="contained"
          >
                    Submit Domain
          </WithStyles(Button)>
</form>,
      ],
      "className": "blahStyle",
      "elevation": 4,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Submit a Domain",
          "gutterBottom": true,
          "variant": "headline",
        },
        "ref": null,
        "rendered": "Submit a Domain",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Domain Name ex: \\"npr.org\\"",
          "gutterBottom": true,
          "variant": "body2",
        },
        "ref": null,
        "rendered": "Domain Name ex: \\"npr.org\\"",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "color": "error",
          "id": "errors",
          "variant": "body2",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "",
          "children": Array [
            <div
              className="field"
>
              <TextField
                            error={null}
                            id="name"
                            label="Domain Name"
                            onChange={[Function]}
                            required={false}
                            select={false}
                            type="name"
                            value=""
              />
</div>,
            <div
              className="field"
>
              <TextField
                            className={undefined}
                            id="description"
                            label="Description of domain"
                            margin="normal"
                            multiline={true}
                            name="description"
                            onChange={[Function]}
                            placeholder="Description of domain"
                            required={false}
                            select={false}
                            value=""
              />
</div>,
            <WithStyles(Button)
              className="btn btn-primary btn-submit"
              color="primary"
              onClick={[Function]}
              type="submit"
              variant="contained"
>
              Submit Domain
</WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                error={null}
                id="name"
                label="Domain Name"
                onChange={[Function]}
                required={false}
                select={false}
                type="name"
                value=""
/>,
              "className": "field",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "error": null,
                "id": "name",
                "label": "Domain Name",
                "onChange": [Function],
                "required": false,
                "select": false,
                "type": "name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                className={undefined}
                id="description"
                label="Description of domain"
                margin="normal"
                multiline={true}
                name="description"
                onChange={[Function]}
                placeholder="Description of domain"
                required={false}
                select={false}
                value=""
/>,
              "className": "field",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "id": "description",
                "label": "Description of domain",
                "margin": "normal",
                "multiline": true,
                "name": "description",
                "onChange": [Function],
                "placeholder": "Description of domain",
                "required": false,
                "select": false,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Submit Domain",
              "className": "btn btn-primary btn-submit",
              "color": "primary",
              "onClick": [Function],
              "type": "submit",
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Submit Domain",
            "type": [Function],
          },
        ],
        "type": "form",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            gutterBottom={true}
            variant="headline"
>
            Submit a Domain
</WithStyles(Typography)>,
          <WithStyles(Typography)
            gutterBottom={true}
            variant="body2"
>
            Domain Name ex: "npr.org"
</WithStyles(Typography)>,
          <WithStyles(Typography)
            color="error"
            id="errors"
            variant="body2"
/>,
          <form
            action=""
>
            <div
                        className="field"
            >
                        <TextField
                                    error={null}
                                    id="name"
                                    label="Domain Name"
                                    onChange={[Function]}
                                    required={false}
                                    select={false}
                                    type="name"
                                    value=""
                        />
            </div>
            <div
                        className="field"
            >
                        <TextField
                                    className={undefined}
                                    id="description"
                                    label="Description of domain"
                                    margin="normal"
                                    multiline={true}
                                    name="description"
                                    onChange={[Function]}
                                    placeholder="Description of domain"
                                    required={false}
                                    select={false}
                                    value=""
                        />
            </div>
            <WithStyles(Button)
                        className="btn btn-primary btn-submit"
                        color="primary"
                        onClick={[Function]}
                        type="submit"
                        variant="contained"
            >
                        Submit Domain
            </WithStyles(Button)>
</form>,
        ],
        "className": "blahStyle",
        "elevation": 4,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Submit a Domain",
            "gutterBottom": true,
            "variant": "headline",
          },
          "ref": null,
          "rendered": "Submit a Domain",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Domain Name ex: \\"npr.org\\"",
            "gutterBottom": true,
            "variant": "body2",
          },
          "ref": null,
          "rendered": "Domain Name ex: \\"npr.org\\"",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
            "color": "error",
            "id": "errors",
            "variant": "body2",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "",
            "children": Array [
              <div
                className="field"
>
                <TextField
                                error={null}
                                id="name"
                                label="Domain Name"
                                onChange={[Function]}
                                required={false}
                                select={false}
                                type="name"
                                value=""
                />
</div>,
              <div
                className="field"
>
                <TextField
                                className={undefined}
                                id="description"
                                label="Description of domain"
                                margin="normal"
                                multiline={true}
                                name="description"
                                onChange={[Function]}
                                placeholder="Description of domain"
                                required={false}
                                select={false}
                                value=""
                />
</div>,
              <WithStyles(Button)
                className="btn btn-primary btn-submit"
                color="primary"
                onClick={[Function]}
                type="submit"
                variant="contained"
>
                Submit Domain
</WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextField
                  error={null}
                  id="name"
                  label="Domain Name"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  type="name"
                  value=""
/>,
                "className": "field",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "error": null,
                  "id": "name",
                  "label": "Domain Name",
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "name",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextField
                  className={undefined}
                  id="description"
                  label="Description of domain"
                  margin="normal"
                  multiline={true}
                  name="description"
                  onChange={[Function]}
                  placeholder="Description of domain"
                  required={false}
                  select={false}
                  value=""
/>,
                "className": "field",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": undefined,
                  "id": "description",
                  "label": "Description of domain",
                  "margin": "normal",
                  "multiline": true,
                  "name": "description",
                  "onChange": [Function],
                  "placeholder": "Description of domain",
                  "required": false,
                  "select": false,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Submit Domain",
                "className": "btn btn-primary btn-submit",
                "color": "primary",
                "onClick": [Function],
                "type": "submit",
                "variant": "contained",
              },
              "ref": null,
              "rendered": "Submit Domain",
              "type": [Function],
            },
          ],
          "type": "form",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
