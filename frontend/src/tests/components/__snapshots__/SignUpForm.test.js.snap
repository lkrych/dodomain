// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUpForm renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    signUp={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="errors"
/>,
        <form>
          <div
                    className="field"
          >
                    <label>
                               Email 
                    </label>
                    <br />
                    <input
                              autoFocus="autofocus"
                              id="email"
                              onChange={[Function]}
                              type="email"
                              value=""
                    />
          </div>
          <div
                    className="field"
          >
                    <label>
                               Password 
                    </label>
                    <br />
                    <input
                              autoComplete="off"
                              id="password"
                              onChange={[Function]}
                              type="password"
                              value=""
                    />
          </div>
          <div
                    className="field"
          >
                    <label>
                               Password Confirmation 
                    </label>
                    <br />
                    <input
                              autoComplete="off"
                              id="password_confirmation"
                              onChange={[Function]}
                              type="password"
                              value=""
                    />
          </div>
          <input
                    className="btn btn-primary btn-submit"
                    onClick={[Function]}
                    type="submit"
          />
</form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "errors",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="field"
>
              <label>
                             Email 
              </label>
              <br />
              <input
                            autoFocus="autofocus"
                            id="email"
                            onChange={[Function]}
                            type="email"
                            value=""
              />
</div>,
            <div
              className="field"
>
              <label>
                             Password 
              </label>
              <br />
              <input
                            autoComplete="off"
                            id="password"
                            onChange={[Function]}
                            type="password"
                            value=""
              />
</div>,
            <div
              className="field"
>
              <label>
                             Password Confirmation 
              </label>
              <br />
              <input
                            autoComplete="off"
                            id="password_confirmation"
                            onChange={[Function]}
                            type="password"
                            value=""
              />
</div>,
            <input
              className="btn btn-primary btn-submit"
              onClick={[Function]}
              type="submit"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                   Email 
</label>,
                <br />,
                <input
                  autoFocus="autofocus"
                  id="email"
                  onChange={[Function]}
                  type="email"
                  value=""
/>,
              ],
              "className": "field",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Email ",
                },
                "ref": null,
                "rendered": " Email ",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoFocus": "autofocus",
                  "id": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                   Password 
</label>,
                <br />,
                <input
                  autoComplete="off"
                  id="password"
                  onChange={[Function]}
                  type="password"
                  value=""
/>,
              ],
              "className": "field",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Password ",
                },
                "ref": null,
                "rendered": " Password ",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "id": "password",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                   Password Confirmation 
</label>,
                <br />,
                <input
                  autoComplete="off"
                  id="password_confirmation"
                  onChange={[Function]}
                  type="password"
                  value=""
/>,
              ],
              "className": "field",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Password Confirmation ",
                },
                "ref": null,
                "rendered": " Password Confirmation ",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "id": "password_confirmation",
                  "onChange": [Function],
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "btn btn-primary btn-submit",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="errors"
/>,
          <form>
            <div
                        className="field"
            >
                        <label>
                                     Email 
                        </label>
                        <br />
                        <input
                                    autoFocus="autofocus"
                                    id="email"
                                    onChange={[Function]}
                                    type="email"
                                    value=""
                        />
            </div>
            <div
                        className="field"
            >
                        <label>
                                     Password 
                        </label>
                        <br />
                        <input
                                    autoComplete="off"
                                    id="password"
                                    onChange={[Function]}
                                    type="password"
                                    value=""
                        />
            </div>
            <div
                        className="field"
            >
                        <label>
                                     Password Confirmation 
                        </label>
                        <br />
                        <input
                                    autoComplete="off"
                                    id="password_confirmation"
                                    onChange={[Function]}
                                    type="password"
                                    value=""
                        />
            </div>
            <input
                        className="btn btn-primary btn-submit"
                        onClick={[Function]}
                        type="submit"
            />
</form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "errors",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="field"
>
                <label>
                                 Email 
                </label>
                <br />
                <input
                                autoFocus="autofocus"
                                id="email"
                                onChange={[Function]}
                                type="email"
                                value=""
                />
</div>,
              <div
                className="field"
>
                <label>
                                 Password 
                </label>
                <br />
                <input
                                autoComplete="off"
                                id="password"
                                onChange={[Function]}
                                type="password"
                                value=""
                />
</div>,
              <div
                className="field"
>
                <label>
                                 Password Confirmation 
                </label>
                <br />
                <input
                                autoComplete="off"
                                id="password_confirmation"
                                onChange={[Function]}
                                type="password"
                                value=""
                />
</div>,
              <input
                className="btn btn-primary btn-submit"
                onClick={[Function]}
                type="submit"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                     Email 
</label>,
                  <br />,
                  <input
                    autoFocus="autofocus"
                    id="email"
                    onChange={[Function]}
                    type="email"
                    value=""
/>,
                ],
                "className": "field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Email ",
                  },
                  "ref": null,
                  "rendered": " Email ",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoFocus": "autofocus",
                    "id": "email",
                    "onChange": [Function],
                    "type": "email",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                     Password 
</label>,
                  <br />,
                  <input
                    autoComplete="off"
                    id="password"
                    onChange={[Function]}
                    type="password"
                    value=""
/>,
                ],
                "className": "field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Password ",
                  },
                  "ref": null,
                  "rendered": " Password ",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "id": "password",
                    "onChange": [Function],
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                     Password Confirmation 
</label>,
                  <br />,
                  <input
                    autoComplete="off"
                    id="password_confirmation"
                    onChange={[Function]}
                    type="password"
                    value=""
/>,
                ],
                "className": "field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Password Confirmation ",
                  },
                  "ref": null,
                  "rendered": " Password Confirmation ",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "id": "password_confirmation",
                    "onChange": [Function],
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "btn btn-primary btn-submit",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
